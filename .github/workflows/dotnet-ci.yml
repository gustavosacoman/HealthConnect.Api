name: .NET CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x' 

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test with Code Coverage
      run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage"

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Generate Coverage Report & Quality Gate
      run: reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"coveragereport" -reporttypes:"Html_Dark;MarkdownSummary" -tag:${{ github.sha }} -thresholds:70

    - name: Publish API
      run: dotnet publish ./HealthConnect.Api/HealthConnect.Api.csproj --configuration Release --output ./publish

    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-api
        path: ./publish

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test 
    if: github.ref == 'refs/heads/main' 

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: dotnet-api

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'healthconnect-api'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .
